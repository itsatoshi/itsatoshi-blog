import "./globals.css";

import { Provider } from "@itsatoshi/components/theme/provider";
import type { Metadata } from "next";
import localFont from "next/font/local";

const zenMaruGothic = localFont({
  src: [
    {
      path: "../../public/fonts/ZenMaruGothic-Light.ttf",
      weight: "300",
      style: "normal",
    },
    {
      path: "../../public/fonts/ZenMaruGothic-Regular.ttf",
      weight: "400",
      style: "normal",
    },
    {
      path: "../../public/fonts/ZenMaruGothic-Medium.ttf",
      weight: "500",
      style: "normal",
    },
    {
      path: "../../public/fonts/ZenMaruGothic-Bold.ttf",
      weight: "700",
      style: "normal",
    },
  ],
  variable: "--font-zen-maru-gothic",
  display: "swap",
  preload: true,
});

const sora = localFont({
  src: [
    {
      path: "../../public/fonts/Sora-Thin.ttf",
      weight: "100",
      style: "normal",
    },
    {
      path: "../../public/fonts/Sora-ExtraLight.ttf",
      weight: "200",
      style: "normal",
    },
    {
      path: "../../public/fonts/Sora-Light.ttf",
      weight: "300",
      style: "normal",
    },
    {
      path: "../../public/fonts/Sora-Regular.ttf",
      weight: "400",
      style: "normal",
    },
    {
      path: "../../public/fonts/Sora-Medium.ttf",
      weight: "500",
      style: "normal",
    },
    {
      path: "../../public/fonts/Sora-SemiBold.ttf",
      weight: "600",
      style: "normal",
    },
    {
      path: "../../public/fonts/Sora-Bold.ttf",
      weight: "700",
      style: "normal",
    },
    {
      path: "../../public/fonts/Sora-ExtraBold.ttf",
      weight: "800",
      style: "normal",
    },
  ],
  variable: "--font-sora",
  display: "swap",
  preload: true,
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html
      lang="en"
      suppressHydrationWarning
      className={`${zenMaruGothic.variable} ${sora.variable}`}
    >
      <body>
        <Provider>{children}</Provider>
      </body>
    </html>
  );
}
